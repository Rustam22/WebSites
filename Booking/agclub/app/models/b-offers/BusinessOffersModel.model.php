<?php	class BusinessOffersModel extends CRUDModel {		public $r_id;		public $lang_id;		public $itemTitle;		public $content;		public $image;		public $date;		public $forLoggedIn;				public static $tplViewFile;		public static $multiLang = true;				public function __construct() {					$this->r_id = new stdClass();			$this->r_id->value = null;			$this->lang_id = new stdClass();			$this->lang_id->value = null;					$messages = Application::$messages['model_news'];			$this->itemTitle = new ModelTextField("itemTitle", $messages['field_itemTitle'], true, true);			$this->itemTitle->required = false;			$this->content = new ModelTinyMce("content", $messages['field_content'], true, true);			$this->content->required = false;			$this->image = new ModelFMImageField("image", Application::$messages['model_news']['field_image'], false, true);			$this->image->required = false;			$this->image->common = true;			$this->date = new ModelDateField("date", $messages['field_date'], true, true);			$this->date->common = true;						$this->forLoggedIn = new ModelSelectField("forLoggedIn", $messages['field_forLoggedIn'], Array(				'0' => Application::$messages['common_messages']['nno'],				'1' => Application::$messages['common_messages']['yyes'],			), true, true);			$this->forLoggedIn->common = true;		}		public function getSearchUrl() {			return 'business-offers/view/' . $this->r_id->value;		}				public static function initialize() {			self::$displayFields = Array('image', 'itemTitle', 'date');			self::$title = Application::$messages['model_bo']['title'];			self::$iconPath = 'category-icons.png';			self::$multiLang = true;			self::$searchable = true;			self::$viewUrl = 'business-offers';			self::$useOwnViewUrl = false;			self::$searchSettings = Array(				'title_field' => 'itemTitle',				'content_field' => 'content',			);		}						public static function getBOList($lang, $start, $limit) {			$sql = "SELECT `".self::getTableName()."`.* 			FROM `".self::getTableName()."` 			WHERE 			`".self::getTableName()."`.`lang_id` = '{#1}' 			AND `".self::getTableName()."`.`itemTitle` IS NOT NULL 			AND trim(`".self::getTableName()."`.`itemTitle`) <> '' ";			if (!Application::$storage['logged_in']) {				$sql .= " AND `forLoggedIn` <> '1' ";			}			$sql .= "ORDER BY `".self::getTableName()."`.`date` DESC 			LIMIT " . ($start * $limit) . "," . $limit;			$r = self::fQuery($sql, Array($lang));			$c = count($r);			for ($i = 0; $i < $c; $i++) {				$r[$i]['description'] = Utils::parseWords($r[$i]['content'], 1);			}			return $r;		}			}?>